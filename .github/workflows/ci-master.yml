name: Master CI/CD

# Trigger on push to master branch only
on:
  push:
    branches:
      - master

# Set default permissions (read-only by default)
permissions:
  contents: read

jobs:
  # Job 1: Test and validate across multiple Node.js versions
  test-and-validate:
    name: Test on Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v5

      # Step 2: Setup Node.js with caching
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci

      # Step 4: Run ESLint
      - name: Run ESLint
        run: npm run lint:check

      # Step 5: Run Prettier format check
      - name: Run Prettier format check
        run: npm run format:check

      # Step 6: Run tests
      - name: Run tests
        run: npm test

      # Step 7: Upload coverage (optional - commented for future implementation)
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v5
      #   with:
      #     files: ./coverage/coverage-final.json
      #     flags: unittests
      #     name: codecov-umbrella
      #     fail_ci_if_error: false

  # Job 2: Build production artifact with Node.js 22 LTS
  build-artifact:
    name: Build production artifact
    runs-on: ubuntu-latest
    needs: test-and-validate

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v5

      # Step 2: Setup Node.js 22.x (LTS fixed)
      - name: Setup Node.js 22.x
        uses: actions/setup-node@v5
        with:
          node-version: 22.x
          cache: 'npm'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci

      # Step 4: Create package tarball (.tgz)
      - name: Create package tarball
        run: npm pack

      # Step 5: Upload artifact with SHA-based name
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.sha }}
          path: '*.tgz'
          retention-days: 7

  # Job 3: End-to-End tests using production artifact
  e2e-tests:
    name: E2E tests with artifact
    runs-on: ubuntu-latest
    needs: build-artifact

    steps:
      # Step 1: Checkout code (needed for test scripts)
      - name: Checkout code
        uses: actions/checkout@v5

      # Step 2: Download artifact from build-artifact job
      - name: Download artifact
        uses: actions/download-artifact@v5
        with:
          name: build-${{ github.sha }}

      # Step 3: Setup Node.js 22.x (LTS)
      - name: Setup Node.js 22.x
        uses: actions/setup-node@v5
        with:
          node-version: 22.x

      # Step 4: Install package globally from artifact
      - name: Install package globally from artifact
        run: npm install -g *.tgz

      # Step 5: Run E2E tests
      - name: Run E2E tests
        run: |
          cd test/bin
          bash bin-test.sh
        shell: bash

      # Step 6: Verify test results
      - name: Verify test results
        run: echo "âœ… All 8 E2E tests passed successfully"
